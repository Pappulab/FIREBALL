Metadata-Version: 2.1
Name: fireball
Version: 0+untagged.3.gdccce5d.dirty
Author: Pappu lab
Author-email: alex.holehouse@wustl.edu
License: LGPLv3
Description-Content-Type: text/markdown
License-File: LICENSE

FIREBALL (FItting REal BinodALs with non-Linear models)
==============================

## About
A general-purpose Python package for fitting and building phase diagrams.

## Installation
As of right now fireball can be installed from the `github` repository. Specifically, this involves;

1. Cloning the repo locally - i.e.

		git clone git@github.com:alexholehouse/fireball.git
		
2. Move into the main FIREBALL directory  (where `setup.py` is) and run

		pip install .
		
	This will install fireball locally. Alternatively, you can run

			pip install -e .
		
Which will install fireball locally but link to this specific location of the code, so changes made are instantaneously reflected in the global install

## Command-line usage
Fireball comes with two main command-line tools: `fireball-fit` and `fireball-draw`.

### fireball-fit
`fireball-fit` is the main command for fitting to binodals. The simplest usage is

	fireball-fit --filename <name of csv or .xls file with dense/dilute phase data>
	
This will fit the provided dense/dilute phase using the default options (discussed below).

#### Input files
	
Input files should follow the same format as originally defined

> **Note** `pandas` deprecated the ability to read `.xlsx` files late in 2020, hence the `.xls` requirement).

Specifically this format is:

	Temp, Dense, Dilute, Dense_error, Dilute_Error
	
Note that a header line matching this is required, and then each subsequent line should populate `Temp` and at least one of `Dense` or `Dilute`. 

For example, a valid `.csv` file might look like:

	Temp, Dense, Dilute, Dense_Error, Dilute_Error
	277.15, , 0.169398717, 0.003441092,
	278.15, 392.6589709, 0.176515138, 0.004301365,
	279.15, , 0.207073885, 0.003557961,
	281.15, , 0.303633945, 0.004274112,

#### Input options
`fireball-fit` offers a bunch of fit options, listed below
	
	  --filename FILENAME   Input file with information for fitting
	  --initial_guess INITIAL_GUESS
	                        [OPTIONAL] Initial guess for values (format X_Y_Z
	                        where X,Y,Z depend on the fitting procedure. Run
	                        --fitting-info for more) [Default = 209_0.31_100]
	  --free_param_list FREE_PARAMETER_LIST
	                        [OPTIONAL] Define which parameters should be free vs
	                        fixed (format X_Y_Z where X,Y,Z are 0 if the parameter
	                        is fixed and 1 if it is free. Run --fitting-info for
	                        more) [Default = 1_1_0]
	  --conversion-factor CONVERSION_FACTOR
	                        [OPTIONAL] Conversion factor that converts
	                        concentration in mg/ml to volume fraction (Default =
	                        1310 mg/ml)
	  --temperature-offset TEMPERATURE_OFFSET
	                        [OPTIONAL] Value that defines the temperature offset,
	                        where temperature values in this file - offset = 0
	                        [Default = 273.15, assumes data are in Kelvin]
	  --LCST-check LCST_CHECK
	                        [OPTIONAL] Flag which, if set to true, tells the
	                        algorithm that this is a lower critical system (Default
	                        = False)
	  --fitting-method FITTING_METHOD
	                        [OPTIONAL] Method to fit, must be one of... [Default =
	                        'Nelder-Mead'
	  --maxfev MAXFEV       [OPTIONAL] Max number of function evaluations allowed
	                        during optimization [default=200]
	  --xatol XATOL         [OPTIONAL] The absolute error in the parameter set
	                        between iterations that is acceptable for convergence
	                        [default=0.1]
	  --fatol FATOL         [OPTIONAL] The absolute error in the square-residuals
	                        between iterations that is acceptable for convergence
	                        [default=0.1]
	  --increment INCREMENT
	                        [OPTIONAL] The phase diagram increment [default=1.0]
	  --mode MODE           Defines the fitting mode to be used. Valid options
	                        are: flory-huggins-3B [default=flory-huggins-3B]
	  --outname OUTNAME     Name of output file where binodal/spinodal data are
	                        written [DEFAULT = binodal.csv]
	  --outname-fitfile OUTNAME_FITFILE
	                        Name of output file where binodal/spinodal data are
	                        written [DEFAULT = fit_params.csv]
	  --show-partial-fit    Flag which, if set to true, will show the binoal
	                        generated from the partial fit.
	  --noplot              Flag which, if provided, means no figure is generated
	                        to screen but the binodal data is just saved to disk
	  --version             Print software version


A few non-intuitive things:

* Right now the only `--mode` is `flory-huggins-3B`, but, we can imagine adding additional modes so a single tool lets you fit data with different models...

* By default, the first two parameters are free and third parameter is fixed. These correspond to w1, w3, and n, respectively. In general, the value of a fixed parameter is kept the same as whatever is passed to `--inital_guess`. For example, if `--inital_guess` is set to `200_0.01_150` and `--free_param_list` is set to `0_1_1` then w1 will be fixed at 200, whereas w3 and n will be free parameters but initialized at 0.1 and 150, respectively.

* Ultimately we might want to add more `--fitting-method` but right now the only one is `Nelder-Mead` so no need to ever use this flag.

* `--version` prints the FIREBALL version, which means `--version` from both `fireball-fit` and `fireball-draw` (see below) will give same version. Versioning is done automatically bit git - for now it'll just be a commit hash but once things are a tad more mature we can tag the code and give it a real version number.

As output this generates a few files. Assuming `--noplot` is not set, the function by default generates a plot to the screen and also saves the binodals in normal and logspace (wrt phi) as PDFs. It will also save three `.csv` files, which by default are called `binodal.csv`, `spionodal.csv`, and `fit_params.csv`. These contain the binodal information, the spinodal information, and the summary of the fit params, respectively, as one might expect from the names.

### fireball-draw
`fireball-draw` is a simple program, and lets you basically build and plot the data for a phase diagram by passing in parameters directly (rather than fitting to data). 

Specifically, it can be passed the following options

	  -h, --help            show this help message and exit
	  --filename FILENAME   Input file with information for plotting
	  parameter values (format X_Y_Z where X,Y,Z depend on the fitting procedure. Run --fitting-info for more) [Default = 209_0.31_100]",  default = "209_0.31_100")

	  --param_list PARAM_LIST
	                        [OPTIONAL] Paramater values (format X_Y_Z where X,Y,Z
	                        depend on the fitting procedure. (Default =
	                        209_0.31_100)
	  --conversion-factor CONVERSION_FACTOR
	                        [OPTIONAL] Conversion factor that converts
	                        concentration in mg/ml to volume fraction (Default =
	                        1310 mg/ml)
	  --temperature-offset TEMPERATURE_OFFSET
	                        Value that defines the temperature offset, where
	                        temperature values in this file - offset = 0 [Default
	                        = 273.15, assumes data are in Kelvin]
	  --LCST-check LCST_CHECK
	                        [OPTIONAL] Flag which, if set to true, tells the
	                        algorithm that this is a lower critical system (Default
	                        = False)
	  --increment INCREMENT
	                        [OPTIONAL] The phase diagram increment [default=1.0]
	  --version             Print software version
	  --mode MODE           Defines the fitting mode to be used. Valid options
	                        are: flory-huggins-3B [default=flory-huggins-3B]
	  --outname OUTNAME     Name of output file where binodal/spinodal data are
	                        written
	  --noplot              Flag which, if provided, means no figure is generated
	                        to screen but the binodal data is just saved to disk


Note that the `--filename` is optional, and the simplest usage:

	fireball-draw --param_list 209_0.31_100 --conversion-factor 1310 --temperature-offset 273
	
Will just work...

## Package usage
In addition (and much less tested) fireball also lets you work directly inside Python. We can and should expand this out, but, for example



	from matplotlib import pyplot as plt
	from matplotlib.pyplot import figure
	from fireball import full_binodal
	
	# define some params
	W1=200
	W3=0.1
	n = 200
	TOFF=273
	
	# build figure frame
	figure(num=None, figsize=(5, 2), dpi=150, facecolor='w', edgecolor='k')
	ax = plt.gca()
	
	for x in range(150,250,20):
	    A = full_binodal.build_theoretical_binodal_flory_huggins_3B(x,  W4, n, temperature_offset=TOFF)
	    plt.plot(A[1],A[2],'k--',linewidth=0.5)
	    plt.plot(A[1],A[2],'.', alpha=0.5, markersize=2, label='%i'%(x))
	
	plt.xlabel(r'$\phi$')
	plt.ylabel(r'T')
	plt.legend(frameon=False)
	

## Architecture and development
General structure of the code is as follows:


All command-line tools can be found in

	scripts/
	
This is where I recommend starting to read through the code. After parsing input options the `fireball-fit` program does a few things.

#### Stage 1 - fit the data
It calls `optimizer.optimizer_flory_huggins_3B()`, which is the wrapper code for fitting with the `flory_huggins_3B` model. 

That function is inside `fireball/optimizer.py`, which itself optimizes by applyiing `scipy.optimize.minimize` on the function `partial_binodal.residual_finder_flory_3B()`. 

The `partial_binodal.py` module is the module where an energy function to be optimized is, and this in tern loads components of the the actual physical model from `/threory/flory_huggins_3B.py`.
	
Which imports code from `fireball`. The `fireball` code is in `fireball/` directory, where there are three main bits of code to be aware of. 

#### Stage 2 - plot the data
This is done by `full_binodal.build_theoretical_binodal_flory_huggins_3B()`


## Development

### Copyright

Copyright (c) 2019-2021, Pappu lab


#### Acknowledgements
 
FIREBALL was written by Mina Farag with some help from Alex Holehouse
